.\" Title: micro_evtd
.\"Author: Bob Perry
.TH MICRO_EVTD 8 "November 2008" "3.3" "User Commands"
.nh
.ad l
.SH NAME
micro_evtd \- Linkstation/Kuro/Terastation Micro Event Daemon
.SH SYNOPSIS
micro_evtd
.RB [ \-s\ \fIstring1,string2,..\fR ]
.RB [ \-c ]
.RB [ \-v ]
.RB [ \-q ]
.RB [ \-p\ \fIpriority\fR ]
.RB [ \-w\ \fIseconds\fR ]
.RB [ \-e ]
.SH DESCRIPTION
.IR mico_evtd
is an operating system daemon and should be started from /etc/init.d or
directly.  It will return immediately, so you don't need to start
it with '&'.
.PP
.IR micro_evtd
is a simple and small user space interface to the Linkstation/Kuro/Terastation
Micro controller which is fitted to the ARM series of NAS boxes. It does not
have a lot of features but it's main task is to provide 'keep-alive'
messages to the on-board Micro. This device controls/monitors the fan,
various LEDs, system temperature and two buttons. This daemon provides
the necessary initialisation to the device and also monitors and controls
the fan depending on current temperature readings. It also monitors a power
button (located at the front) and a reset button (located at the rear).
.LP
A new feature of this daemon is the ability to code standby events for single
or groups of days. This allows the user to add any number of standby-on/off
events as required. You can send a SIGHUP to the daemon to get it to report
the time remaining before entering standby. Five minutes before standby, a
message is reported to all users. A user can delay standby by five minutes
by sending a SIGCONT to the daemon. Each successive SIGCONT adds another
five minutes. Alternatively, a SIGINT will log a standby skip. When the 
timed event is reached, it will skip it for the next event.
.SH OPTIONS
.TP
\fB-s\fR
\fIstring1,string2,.. \fR Specifies a comma seperated hexadecimal command
sequence which will be transmitted to the Micro.
.TP
\fB-c\fR
Don't fork, i.e. run in the foreground (debug use only).
.TP
\fB-v\fR
Displays the current daemon version information.
.TP
\fB-q\fR
Quiet mode for the display of results from use of the command sequence.
This option will prevent the display of returned results from the micro.
.TP
\fB-p\fR
\fIpriority\fR This allows the priority of the process to be changed.  This
defaults to -4.
.TP
\fB-w\fR
.IR seconds
This is used by the standby process.  The time specified is in seconds.  This
is the time for which the unit will wait until issuing a wake up event.
.TP
\fB-e\fR
This is used by the standby process.  The daemon will wait until an event
occurs to awaken the box.
.SH BUTTON OPERATION
All events, whether mechanical button operation, or software reset/shutdown
actions are routed through \fBmicro_evtd.event(8)\fR
.TP
\fIPOWER\fR
On release, a button event message is sent.
.TP
\fIRESET\fR
On release, a button event message is sent.
.LP
If the button is held for more than 4 seconds then an alternating sequence
event is sent.
.SH FILES
.RS 0
/etc/micro_evtd/micro_evtd.conf
.RE
.RS 0
/etc/micro_evtd/micro_evtd.event
.RS 0
/boot/standby_pending
.RE
.RS 0
/boot/standby
.RE
.RS 0
<TMP>/my_status
.RE
.RS 0
<TMP>/my_standby
.RE
.SH SEE ALSO
.TP
\fBmicroapl\fR(8), \fBmicro_evtd.conf\fR(5), \fBmicro_evtd.event\fR(8).
.SH AUTHOR
Bob Perry <lb-source@users.sourceforge.net>